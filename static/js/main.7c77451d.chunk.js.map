{"version":3,"sources":["components/App/App.js","components/App/index.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContaniner","MessageHeader","MessageAuthor","MessageTime","MessageBody","ErrorMessage","Loading","Message","author","time","children","App","useState","messages","setMessages","messagesApiError","setMessagesApiError","value","setValue","createMessageError","setCreateMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","res","json","data","catch","err","message","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onChange","target","onFocus","rows","toString","length","map","Date","createdAt","toLocaleString","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAOMA,EAAOC,IAAOC,IAAV,gEAKJC,EAAQF,IAAOG,GAAV,4CAILC,EAAcJ,IAAOK,KAAV,iDAIXC,EAAkBN,IAAOO,SAAV,+DAIfC,EAAeR,IAAOS,OAAV,gDAIZC,EAAcV,IAAOC,IAAV,iDAIXU,EAAoBX,IAAOC,IAAV,yIAUjBW,EAAgBZ,IAAOC,IAAV,iLAQbY,EAAgBb,IAAOC,IAAV,+EAKba,EAAcd,IAAOC,IAAV,0BAEXc,EAAcf,IAAOC,IAAV,oEAKXe,EAAehB,IAAOC,IAAV,gEAKZgB,EAAUjB,IAAOC,IAAV,gPAcb,SAASiB,EAAT,GAA8C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/B,OACE,eAACV,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBM,IAChB,cAACL,EAAD,UAAcM,OAEhB,cAACL,EAAD,UAAcM,OAgHLC,ICvMAA,EDkGf,WACE,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgDF,mBAAS,MAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAoDN,qBAApD,mBAAOO,EAAP,KAA2BC,EAA3B,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAOA,SAASC,IACP,OAAOC,MA3GT,2EA4GKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAoBc,EAAIC,YA4C9B,OAvDAC,qBAAU,WACRT,MACC,IAsDD,eAACnC,EAAD,WACGiC,GAAwB,cAACf,EAAD,oCACzB,cAACf,EAAD,iCACA,eAACE,EAAD,CAAawC,SApCjB,SAA0BC,GACxBA,EAAEC,iBACEd,IAGJC,GAAwB,GACxBE,MAAM,8CAA+C,CACnDY,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,QACVH,KAAMrB,MAGPQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKc,IAITxB,EAAS,IACTK,KAJEH,EAAsBQ,EAAKG,YAM9BF,OAAM,SAACC,GACNR,GAAwB,GACxBF,EAAsBU,EAAIC,cAQ5B,UACE,cAACpC,EAAD,CACEsB,MAAOA,EACP0B,SA/CR,SAA8BT,GAC5BhB,EAASgB,EAAEU,OAAO3B,QA+CZ4B,QA5CR,WACEzB,EAAsB,OA4ChB0B,KAAM,KAER,cAACjD,EAAD,uCACCsB,GACC,cAACd,EAAD,UAAec,OAGlBJ,GACC,eAACV,EAAD,sCAC2BU,EAAiBgC,cAG7ClC,GAAgC,IAApBA,EAASmC,QAAgB,sDACtC,cAACjD,EAAD,UACGc,GACCA,EAASoC,KAAI,SAAClB,GAAD,OACX,cAACxB,EAAD,CAEEC,OAAQuB,EAAQU,SAChBhC,KAAM,IAAIyC,KAAKnB,EAAQoB,WAAWC,iBAHpC,SAKGrB,EAAQO,MAJJP,EAAQsB,aEvL3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7c77451d.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst API_ENDPOINT =\n  \"https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc\";\n\nconst Page = styled.div`\n  width: 320px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h1`\n  color: #333;\n`;\n\nconst MessageForm = styled.form`\n  margin-top: 16px;\n`;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  width: 100%;\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n`;\n\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\n\nconst MessageContaniner = styled.div`\n  border: 1px solid black;\n  padding: 4px;\n  border-radius: 12px;\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n\nconst MessageHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n  padding-bottom: 8px;\n`;\n\nconst MessageAuthor = styled.div`\n  color: rgba(23, 78, 55, 1);\n  font-size: 14px;\n`;\n\nconst MessageTime = styled.div``;\n\nconst MessageBody = styled.div`\n  margin-top: 8px;\n  font-size: 16px;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  color: red;\n`;\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.4);\n  color: white;\n  font-size: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction Message({ author, time, children }) {\n  return (\n    <MessageContaniner>\n      <MessageHeader>\n        <MessageAuthor>{author}</MessageAuthor>\n        <MessageTime>{time}</MessageTime>\n      </MessageHeader>\n      <MessageBody>{children}</MessageBody>\n    </MessageContaniner>\n  );\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.string,\n};\n\nfunction App() {\n  const [messages, setMessages] = useState(null);\n  const [messagesApiError, setMessagesApiError] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [createMessageError, setCreateMessageError] = useState();\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false);\n\n  // execute one time\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  function fetchMessages() {\n    return fetch(API_ENDPOINT)\n      .then((res) => res.json())\n      .then((data) => {\n        setMessages(data);\n      })\n      .catch((err) => {\n        setMessagesApiError(err.message);\n      });\n  }\n\n  function handleTextAreaChange(e) {\n    setValue(e.target.value);\n  }\n\n  function handleTextAreaFocus() {\n    setCreateMessageError(null);\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    if (isLoadingPostMessage) {\n      return;\n    }\n    setIsLoadingPostMessage(true);\n    fetch(\"https://student-json-api.lidemy.me/comments\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"emory\",\n        body: value,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false);\n        if (data.ok === 0) {\n          setCreateMessageError(data.message);\n          return;\n        }\n        setValue(\"\");\n        fetchMessages();\n      })\n      .catch((err) => {\n        setIsLoadingPostMessage(false);\n        setCreateMessageError(err.message);\n      });\n  }\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>載入中...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextArea\n          value={value}\n          onChange={handleTextAreaChange}\n          onFocus={handleTextAreaFocus}\n          rows={10}\n        />\n        <SubmitButton>送出留言</SubmitButton>\n        {createMessageError && (\n          <ErrorMessage>{createMessageError}</ErrorMessage>\n        )}\n      </MessageForm>\n      {messagesApiError && (\n        <ErrorMessage>\n          Something went wrong... {messagesApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No Messages here...</div>}\n      <MessageList>\n        {messages &&\n          messages.map((message) => (\n            <Message\n              key={message.id}\n              author={message.nickname}\n              time={new Date(message.createdAt).toLocaleString()}\n            >\n              {message.body}\n            </Message>\n          ))}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}